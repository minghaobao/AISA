version: '3.8'

services:
  # MQTT代理服务器
  mqtt:
    image: eclipse-mosquitto:2.0.15
    container_name: mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    restart: unless-stopped

  # InfluxDB时序数据库
  influxdb:
    image: influxdb:2.6.1
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=influxdb_password
      - DOCKER_INFLUXDB_INIT_ORG=smart_iot
      - DOCKER_INFLUXDB_INIT_BUCKET=device_data
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=your_influxdb_token_here
    volumes:
      - ./influxdb/data:/var/lib/influxdb2
      - ./influxdb/config:/etc/influxdb2
    restart: unless-stopped

  # Grafana可视化平台
  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    depends_on:
      - influxdb
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana_password
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana_dashboard.json:/etc/grafana/provisioning/dashboards/main.json
    restart: unless-stopped

  # AI MQTT LangChain应用
  app:
    build: .
    container_name: ai_mqtt_langchain
    depends_on:
      - mqtt
      - influxdb
    ports:
      - "5000:5000"
      - "5001:5001"
    environment:
      - MQTT_HOST=mqtt
      - INFLUXDB_URL=http://influxdb:8086
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-your_influxdb_token_here}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-change_this_to_a_secure_random_string}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # Next.js前端
  frontend:
    build:
      context: ./nextjs_frontend
      dockerfile: Dockerfile
    container_name: nextjs_frontend
    depends_on:
      - app
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000
      - NEXT_PUBLIC_WS_URL=ws://localhost:5001
    restart: unless-stopped

volumes:
  influxdb_data:
  grafana_data:
  mqtt_data:
  mqtt_log: 